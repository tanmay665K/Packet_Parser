
// Generated by Cadence Genus(TM) Synthesis Solution 17.22-s017_1
// Generated on: May 24 2025 15:21:42 IST (May 24 2025 09:51:42 UTC)

// Verification Directory fv/audio_packet_processor 

module bus_controller(clk, rst_n, request_bus, device_id, packet_valid,
     bus_key, bus_grant, bus_busy);
  input clk, rst_n, request_bus, packet_valid;
  input [7:0] device_id;
  output [7:0] bus_key;
  output bus_grant, bus_busy;
  wire clk, rst_n, request_bus, packet_valid;
  wire [7:0] device_id;
  wire [7:0] bus_key;
  wire bus_grant, bus_busy;
  wire [7:0] grant_counter;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35, n_36, n_38, n_53, n_67;
  wire n_68, n_70, n_73, n_74, n_75;
  DFFRHQX1 \grant_counter_reg[3] (.RN (rst_n), .CK (clk), .D (n_67), .Q
       (grant_counter[3]));
  DFFRHQX1 \grant_counter_reg[1] (.RN (rst_n), .CK (clk), .D (n_68), .Q
       (grant_counter[1]));
  DFFRHQX1 \grant_counter_reg[0] (.RN (rst_n), .CK (clk), .D (n_73), .Q
       (grant_counter[0]));
  DFFRHQX1 \grant_counter_reg[2] (.RN (rst_n), .CK (clk), .D (n_74), .Q
       (grant_counter[2]));
  DFFRHQX1 \grant_counter_reg[4] (.RN (rst_n), .CK (clk), .D (n_75), .Q
       (grant_counter[4]));
  DFFRHQX1 \grant_counter_reg[5] (.RN (rst_n), .CK (clk), .D (n_53), .Q
       (grant_counter[5]));
  NOR2XL g1364__8780(.A (n_31), .B (n_70), .Y (n_53));
  DFFRHQX1 \bus_key_reg[2] (.RN (rst_n), .CK (clk), .D (n_35), .Q
       (bus_key[4]));
  DFFRHQX1 bus_busy_reg(.RN (rst_n), .CK (clk), .D (n_33), .Q
       (bus_grant));
  AOI21X1 g1381__2900(.A0 (grant_counter[3]), .A1 (n_21), .B0 (n_14),
       .Y (n_38));
  DFFRHQX1 \bus_key_reg[1] (.RN (rst_n), .CK (clk), .D (n_34), .Q
       (bus_key[7]));
  DFFRHQX1 \bus_key_reg[3] (.RN (rst_n), .CK (clk), .D (n_32), .Q
       (bus_key[5]));
  DFFRHQX1 \bus_key_reg[0] (.RN (rst_n), .CK (clk), .D (n_28), .Q
       (bus_key[6]));
  NOR2XL g1387__7675(.A (grant_counter[5]), .B (n_19), .Y (n_36));
  NAND2XL g1388__7118(.A (n_16), .B (n_27), .Y (n_35));
  OAI21X1 g1389__8757(.A0 (n_15), .A1 (n_26), .B0 (n_17), .Y (n_34));
  OAI2BB1XL g1390__1786(.A0N (bus_grant), .A1N (n_10), .B0 (n_30), .Y
       (n_33));
  INVXL g1391(.A (n_29), .Y (n_32));
  CLKINVX1 g1392(.A (n_31), .Y (n_30));
  AOI31X1 g1393__5953(.A0 (bus_key[5]), .A1 (n_10), .A2 (n_17), .B0
       (n_26), .Y (n_29));
  NAND2XL g1394__5703(.A (n_16), .B (n_24), .Y (n_31));
  NAND2XL g1395__7114(.A (n_24), .B (n_23), .Y (n_28));
  NAND3XL g1396__5266(.A (bus_key[4]), .B (n_10), .C (n_24), .Y (n_27));
  AOI21XL g1397__2250(.A0 (grant_counter[4]), .A1 (n_0), .B0 (n_18), .Y
       (n_25));
  OAI21X1 g1398__6083(.A0 (n_5), .A1 (n_11), .B0 (n_16), .Y (n_26));
  NAND3XL g1399__2703(.A (bus_key[6]), .B (n_10), .C (n_16), .Y (n_23));
  AOI21XL g1400__5795(.A0 (grant_counter[2]), .A1 (n_3), .B0 (n_20), .Y
       (n_22));
  OAI211X1 g1401__7344(.A0 (device_id[0]), .A1 (n_9), .B0 (n_13), .C0
       (n_12), .Y (n_24));
  INVXL g1402(.A (n_20), .Y (n_21));
  INVX1 g1403(.A (n_18), .Y (n_19));
  NOR2XL g1404__1840(.A (grant_counter[2]), .B (n_3), .Y (n_20));
  NOR2XL g1405__5019(.A (grant_counter[4]), .B (n_0), .Y (n_18));
  NAND2XL g1406__1857(.A (bus_key[7]), .B (n_10), .Y (n_15));
  NAND3BX1 g1407__9906(.AN (device_id[0]), .B (n_9), .C (n_12), .Y
       (n_17));
  NAND2BX1 g1408__8780(.AN (n_11), .B (n_4), .Y (n_16));
  INVXL g1409(.A (n_0), .Y (n_14));
  NAND2XL g1410__4296(.A (device_id[0]), .B (n_8), .Y (n_13));
  NOR3BX1 g1412__3772(.AN (packet_valid), .B (bus_grant), .C (n_5), .Y
       (n_12));
  NAND4BBXL g1413__1474(.AN (bus_grant), .BN (n_8), .C (device_id[0]),
       .D (packet_valid), .Y (n_11));
  NAND3X1 g1414__4547(.A (grant_counter[0]), .B (n_6), .C (n_1), .Y
       (n_10));
  AOI21X1 g1415__9682(.A0 (grant_counter[1]), .A1 (grant_counter[0]),
       .B0 (n_2), .Y (n_7));
  NOR3X1 g1416__2683(.A (device_id[5]), .B (device_id[7]), .C
       (device_id[2]), .Y (n_9));
  NAND3X1 g1417__1309(.A (device_id[7]), .B (device_id[2]), .C
       (device_id[5]), .Y (n_8));
  NOR4X1 g1418__6877(.A (device_id[4]), .B (device_id[3]), .C
       (device_id[6]), .D (device_id[1]), .Y (n_4));
  NOR3X1 g1419__2900(.A (grant_counter[2]), .B (grant_counter[3]), .C
       (grant_counter[1]), .Y (n_6));
  NAND4XL g1420__2391(.A (device_id[6]), .B (device_id[1]), .C
       (device_id[4]), .D (device_id[3]), .Y (n_5));
  CLKINVX1 g1421(.A (n_2), .Y (n_3));
  NOR2XL g1422__7675(.A (grant_counter[1]), .B (grant_counter[0]), .Y
       (n_2));
  NOR2XL g1423__7118(.A (grant_counter[4]), .B (grant_counter[5]), .Y
       (n_1));
  NAND2BX1 g2__8757(.AN (grant_counter[0]), .B (n_6), .Y (n_0));
  OAI21X1 g1430(.A0 (n_38), .A1 (n_36), .B0 (n_30), .Y (n_67));
  OAI21X1 g1431(.A0 (n_7), .A1 (n_36), .B0 (n_30), .Y (n_68));
  NAND2XL g1433(.A (grant_counter[5]), .B (n_19), .Y (n_70));
  NOR3XL g1436(.A (n_36), .B (n_31), .C (grant_counter[0]), .Y (n_73));
  NOR3XL g2(.A (n_31), .B (n_22), .C (n_36), .Y (n_74));
  NOR3XL g1437(.A (n_31), .B (n_25), .C (n_36), .Y (n_75));
endmodule

module audio_packet_parser(clk, rst_n, packet_in, packet_valid,
     packet_accepted, packet_rejected, audio_data, device_id,
     sequence_num, parse_done);
  input clk, rst_n, packet_valid;
  input [31:0] packet_in;
  output packet_accepted, packet_rejected, parse_done;
  output [15:0] audio_data;
  output [7:0] device_id, sequence_num;
  wire clk, rst_n, packet_valid;
  wire [31:0] packet_in;
  wire packet_accepted, packet_rejected, parse_done;
  wire [15:0] audio_data;
  wire [7:0] device_id, sequence_num;
  wire [1:0] state;
  wire [31:0] packet_reg;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35, n_36, n_37, n_38, n_39;
  wire n_40, n_41, n_42, n_43, n_44, n_45, n_46, n_47;
  wire n_48, n_49, n_50;
  DFFRHQX1 parse_done_reg(.RN (rst_n), .CK (clk), .D (n_50), .Q
       (parse_done));
  AND2XL g575__1786(.A (state[0]), .B (state[1]), .Y (n_50));
  SDFFRHQX1 packet_rejected_reg(.RN (rst_n), .CK (clk), .D (n_49), .SI
       (packet_rejected), .SE (state[1]), .Q (packet_rejected));
  SDFFRHQX1 \audio_data_reg[0] (.RN (rst_n), .CK (clk), .D
       (packet_reg[0]), .SI (audio_data[0]), .SE (n_48), .Q
       (audio_data[0]));
  SDFFRHQX1 \audio_data_reg[1] (.RN (rst_n), .CK (clk), .D
       (packet_reg[1]), .SI (audio_data[1]), .SE (n_48), .Q
       (audio_data[1]));
  SDFFRHQX1 \audio_data_reg[2] (.RN (rst_n), .CK (clk), .D
       (packet_reg[2]), .SI (audio_data[2]), .SE (n_48), .Q
       (audio_data[2]));
  SDFFRHQX1 \audio_data_reg[3] (.RN (rst_n), .CK (clk), .D
       (packet_reg[3]), .SI (audio_data[3]), .SE (n_48), .Q
       (audio_data[3]));
  SDFFRHQX1 \audio_data_reg[4] (.RN (rst_n), .CK (clk), .D
       (packet_reg[4]), .SI (audio_data[4]), .SE (n_48), .Q
       (audio_data[4]));
  SDFFRHQX1 \audio_data_reg[5] (.RN (rst_n), .CK (clk), .D
       (packet_reg[5]), .SI (audio_data[5]), .SE (n_48), .Q
       (audio_data[5]));
  SDFFRHQX1 \sequence_num_reg[0] (.RN (rst_n), .CK (clk), .D
       (packet_reg[8]), .SI (sequence_num[0]), .SE (n_48), .Q
       (sequence_num[0]));
  SDFFRHQX1 \sequence_num_reg[1] (.RN (rst_n), .CK (clk), .D
       (packet_reg[9]), .SI (sequence_num[1]), .SE (n_48), .Q
       (sequence_num[1]));
  SDFFRHQX1 \sequence_num_reg[2] (.RN (rst_n), .CK (clk), .D
       (packet_reg[10]), .SI (sequence_num[2]), .SE (n_48), .Q
       (sequence_num[2]));
  SDFFRHQX1 \sequence_num_reg[3] (.RN (rst_n), .CK (clk), .D
       (packet_reg[11]), .SI (sequence_num[3]), .SE (n_48), .Q
       (sequence_num[3]));
  SDFFRHQX1 \audio_data_reg[6] (.RN (rst_n), .CK (clk), .D
       (packet_reg[6]), .SI (audio_data[6]), .SE (n_48), .Q
       (audio_data[6]));
  SDFFRHQX1 \sequence_num_reg[4] (.RN (rst_n), .CK (clk), .D
       (packet_reg[12]), .SI (sequence_num[4]), .SE (n_48), .Q
       (sequence_num[4]));
  SDFFRHQX1 \sequence_num_reg[5] (.RN (rst_n), .CK (clk), .D
       (packet_reg[13]), .SI (sequence_num[5]), .SE (n_48), .Q
       (sequence_num[5]));
  SDFFRHQX1 \sequence_num_reg[6] (.RN (rst_n), .CK (clk), .D
       (packet_reg[14]), .SI (sequence_num[6]), .SE (n_48), .Q
       (sequence_num[6]));
  SDFFRHQX1 \sequence_num_reg[7] (.RN (rst_n), .CK (clk), .D
       (packet_reg[15]), .SI (sequence_num[7]), .SE (n_48), .Q
       (sequence_num[7]));
  SDFFRHQX1 \audio_data_reg[7] (.RN (rst_n), .CK (clk), .D
       (packet_reg[7]), .SI (audio_data[7]), .SE (n_48), .Q
       (audio_data[7]));
  SDFFRHQX1 \device_id_reg[0] (.RN (rst_n), .CK (clk), .D
       (packet_reg[16]), .SI (device_id[0]), .SE (n_48), .Q
       (device_id[0]));
  SDFFRHQX1 \device_id_reg[1] (.RN (rst_n), .CK (clk), .D
       (packet_reg[17]), .SI (device_id[1]), .SE (n_48), .Q
       (device_id[1]));
  SDFFRHQX1 \device_id_reg[2] (.RN (rst_n), .CK (clk), .D
       (packet_reg[18]), .SI (device_id[2]), .SE (n_48), .Q
       (device_id[2]));
  SDFFRHQX1 \device_id_reg[3] (.RN (rst_n), .CK (clk), .D
       (packet_reg[19]), .SI (device_id[3]), .SE (n_48), .Q
       (device_id[3]));
  SDFFRHQX1 \device_id_reg[4] (.RN (rst_n), .CK (clk), .D
       (packet_reg[20]), .SI (device_id[4]), .SE (n_48), .Q
       (device_id[4]));
  SDFFRHQX1 \device_id_reg[5] (.RN (rst_n), .CK (clk), .D
       (packet_reg[21]), .SI (device_id[5]), .SE (n_48), .Q
       (device_id[5]));
  SDFFRHQX1 \device_id_reg[6] (.RN (rst_n), .CK (clk), .D
       (packet_reg[22]), .SI (device_id[6]), .SE (n_48), .Q
       (device_id[6]));
  SDFFRHQX1 \device_id_reg[7] (.RN (rst_n), .CK (clk), .D
       (packet_reg[23]), .SI (device_id[7]), .SE (n_48), .Q
       (device_id[7]));
  SDFFRHQX1 packet_accepted_reg(.RN (rst_n), .CK (clk), .D (n_47), .SI
       (packet_accepted), .SE (state[1]), .Q (packet_accepted));
  NOR2XL g1221__5953(.A (n_12), .B (n_45), .Y (n_49));
  INVXL g1222(.A (n_48), .Y (n_47));
  OR2X4 g1223__5703(.A (n_12), .B (n_46), .Y (n_48));
  INVX1 g1224(.A (n_45), .Y (n_46));
  NOR3X1 g1225__7114(.A (n_43), .B (n_42), .C (n_44), .Y (n_45));
  NAND3X1 g1226__5266(.A (n_36), .B (n_37), .C (n_40), .Y (n_44));
  OAI21X1 g1227__2250(.A0 (packet_reg[8]), .A1 (n_39), .B0 (n_41), .Y
       (n_43));
  OAI211X1 g1228__6083(.A0 (n_30), .A1 (n_6), .B0 (n_38), .C0 (n_35),
       .Y (n_42));
  SDFFRHQX1 \packet_reg_reg[2] (.RN (rst_n), .CK (clk), .D
       (packet_in[2]), .SI (packet_reg[2]), .SE (n_22), .Q
       (packet_reg[2]));
  SDFFRHQX1 \packet_reg_reg[3] (.RN (rst_n), .CK (clk), .D
       (packet_in[3]), .SI (packet_reg[3]), .SE (n_22), .Q
       (packet_reg[3]));
  SDFFRHQX1 \packet_reg_reg[4] (.RN (rst_n), .CK (clk), .D
       (packet_in[4]), .SI (packet_reg[4]), .SE (n_22), .Q
       (packet_reg[4]));
  SDFFRHQX1 \packet_reg_reg[5] (.RN (rst_n), .CK (clk), .D
       (packet_in[5]), .SI (packet_reg[5]), .SE (n_22), .Q
       (packet_reg[5]));
  SDFFRHQX1 \packet_reg_reg[6] (.RN (rst_n), .CK (clk), .D
       (packet_in[6]), .SI (packet_reg[6]), .SE (n_22), .Q
       (packet_reg[6]));
  SDFFRHQX1 \packet_reg_reg[7] (.RN (rst_n), .CK (clk), .D
       (packet_in[7]), .SI (packet_reg[7]), .SE (n_22), .Q
       (packet_reg[7]));
  SDFFRHQX1 \packet_reg_reg[8] (.RN (rst_n), .CK (clk), .D
       (packet_in[8]), .SI (packet_reg[8]), .SE (n_22), .Q
       (packet_reg[8]));
  SDFFRHQX1 \packet_reg_reg[9] (.RN (rst_n), .CK (clk), .D
       (packet_in[9]), .SI (packet_reg[9]), .SE (n_22), .Q
       (packet_reg[9]));
  SDFFRHQX1 \packet_reg_reg[10] (.RN (rst_n), .CK (clk), .D
       (packet_in[10]), .SI (packet_reg[10]), .SE (n_22), .Q
       (packet_reg[10]));
  SDFFRHQX1 \packet_reg_reg[11] (.RN (rst_n), .CK (clk), .D
       (packet_in[11]), .SI (packet_reg[11]), .SE (n_22), .Q
       (packet_reg[11]));
  SDFFRHQX1 \packet_reg_reg[12] (.RN (rst_n), .CK (clk), .D
       (packet_in[12]), .SI (packet_reg[12]), .SE (n_22), .Q
       (packet_reg[12]));
  SDFFRHQX1 \packet_reg_reg[13] (.RN (rst_n), .CK (clk), .D
       (packet_in[13]), .SI (packet_reg[13]), .SE (n_22), .Q
       (packet_reg[13]));
  SDFFRHQX1 \packet_reg_reg[14] (.RN (rst_n), .CK (clk), .D
       (packet_in[14]), .SI (packet_reg[14]), .SE (n_22), .Q
       (packet_reg[14]));
  SDFFRHQX1 \packet_reg_reg[15] (.RN (rst_n), .CK (clk), .D
       (packet_in[15]), .SI (packet_reg[15]), .SE (n_22), .Q
       (packet_reg[15]));
  SDFFRHQX1 \packet_reg_reg[16] (.RN (rst_n), .CK (clk), .D
       (packet_in[16]), .SI (packet_reg[16]), .SE (n_22), .Q
       (packet_reg[16]));
  SDFFRHQX1 \packet_reg_reg[17] (.RN (rst_n), .CK (clk), .D
       (packet_in[17]), .SI (packet_reg[17]), .SE (n_22), .Q
       (packet_reg[17]));
  SDFFRHQX1 \packet_reg_reg[18] (.RN (rst_n), .CK (clk), .D
       (packet_in[18]), .SI (packet_reg[18]), .SE (n_22), .Q
       (packet_reg[18]));
  NAND2XL g1246__2703(.A (packet_reg[8]), .B (n_39), .Y (n_41));
  AOI211X1 g1247__5795(.A0 (n_3), .A1 (n_5), .B0 (n_34), .C0 (n_28), .Y
       (n_40));
  SDFFRHQX1 \packet_reg_reg[26] (.RN (rst_n), .CK (clk), .D
       (packet_in[26]), .SI (packet_reg[26]), .SE (n_22), .Q
       (packet_reg[26]));
  SDFFRHQX1 \packet_reg_reg[27] (.RN (rst_n), .CK (clk), .D
       (packet_in[27]), .SI (packet_reg[27]), .SE (n_22), .Q
       (packet_reg[27]));
  SDFFRHQX1 \packet_reg_reg[28] (.RN (rst_n), .CK (clk), .D
       (packet_in[28]), .SI (packet_reg[28]), .SE (n_22), .Q
       (packet_reg[28]));
  SDFFRHQX1 \packet_reg_reg[29] (.RN (rst_n), .CK (clk), .D
       (packet_in[29]), .SI (packet_reg[29]), .SE (n_22), .Q
       (packet_reg[29]));
  SDFFRHQX1 \packet_reg_reg[30] (.RN (rst_n), .CK (clk), .D
       (packet_in[30]), .SI (packet_reg[30]), .SE (n_22), .Q
       (packet_reg[30]));
  SDFFRHQX1 \packet_reg_reg[31] (.RN (rst_n), .CK (clk), .D
       (packet_in[31]), .SI (packet_reg[31]), .SE (n_22), .Q
       (packet_reg[31]));
  SDFFRHQX1 \packet_reg_reg[24] (.RN (rst_n), .CK (clk), .D
       (packet_in[24]), .SI (packet_reg[24]), .SE (n_22), .Q
       (packet_reg[24]));
  SDFFRHQX1 \packet_reg_reg[25] (.RN (rst_n), .CK (clk), .D
       (packet_in[25]), .SI (packet_reg[25]), .SE (n_22), .Q
       (packet_reg[25]));
  SDFFRHQX1 \packet_reg_reg[19] (.RN (rst_n), .CK (clk), .D
       (packet_in[19]), .SI (packet_reg[19]), .SE (n_22), .Q
       (packet_reg[19]));
  SDFFRHQX1 \packet_reg_reg[20] (.RN (rst_n), .CK (clk), .D
       (packet_in[20]), .SI (packet_reg[20]), .SE (n_22), .Q
       (packet_reg[20]));
  SDFFRHQX1 \packet_reg_reg[21] (.RN (rst_n), .CK (clk), .D
       (packet_in[21]), .SI (packet_reg[21]), .SE (n_22), .Q
       (packet_reg[21]));
  SDFFRHQX1 \packet_reg_reg[0] (.RN (rst_n), .CK (clk), .D
       (packet_in[0]), .SI (packet_reg[0]), .SE (n_22), .Q
       (packet_reg[0]));
  SDFFRHQX1 \packet_reg_reg[1] (.RN (rst_n), .CK (clk), .D
       (packet_in[1]), .SI (packet_reg[1]), .SE (n_22), .Q
       (packet_reg[1]));
  SDFFRHQX1 \packet_reg_reg[22] (.RN (rst_n), .CK (clk), .D
       (packet_in[22]), .SI (packet_reg[22]), .SE (n_22), .Q
       (packet_reg[22]));
  SDFFRHQX1 \packet_reg_reg[23] (.RN (rst_n), .CK (clk), .D
       (packet_in[23]), .SI (packet_reg[23]), .SE (n_22), .Q
       (packet_reg[23]));
  AOI21X1 g1263__7344(.A0 (n_23), .A1 (n_18), .B0 (n_31), .Y (n_38));
  AOI21X1 g1264__1840(.A0 (packet_reg[0]), .A1 (n_4), .B0 (n_32), .Y
       (n_39));
  AOI22X1 g1266__5019(.A0 (n_24), .A1 (n_2), .B0 (n_25), .B1 (n_1), .Y
       (n_37));
  AOI21X1 g1267__1857(.A0 (n_26), .A1 (n_19), .B0 (n_29), .Y (n_36));
  OAI21X1 g1268__9906(.A0 (n_27), .A1 (n_17), .B0 (n_33), .Y (n_35));
  OAI22X1 g1269__8780(.A0 (n_24), .A1 (n_2), .B0 (n_25), .B1 (n_1), .Y
       (n_34));
  NAND2XL g1270__4296(.A (n_27), .B (n_17), .Y (n_33));
  NOR2XL g1271__3772(.A (packet_reg[0]), .B (n_4), .Y (n_32));
  NOR2XL g1272__1474(.A (n_23), .B (n_18), .Y (n_31));
  DFFRHQX1 \state_reg[0] (.RN (rst_n), .CK (clk), .D (n_21), .Q
       (state[0]));
  NOR2XL g1274__4547(.A (n_16), .B (n_0), .Y (n_30));
  NOR2XL g1275__9682(.A (n_26), .B (n_19), .Y (n_29));
  NOR2XL g1276__2683(.A (n_3), .B (n_5), .Y (n_28));
  AOI2BB1X1 g1278__1309(.A0N (state[1]), .A1N (packet_valid), .B0
       (state[0]), .Y (n_21));
  OAI21X1 g1279__6877(.A0 (state[0]), .A1 (n_7), .B0 (n_12), .Y (n_20));
  AOI21X1 g1280__2900(.A0 (packet_reg[25]), .A1 (packet_reg[17]), .B0
       (n_13), .Y (n_27));
  OAI21X1 g1282__2391(.A0 (packet_reg[28]), .A1 (packet_reg[20]), .B0
       (n_15), .Y (n_26));
  OAI21X1 g1283__7675(.A0 (packet_reg[29]), .A1 (packet_reg[21]), .B0
       (n_14), .Y (n_25));
  OAI21X1 g1284__7118(.A0 (packet_reg[30]), .A1 (packet_reg[22]), .B0
       (n_9), .Y (n_24));
  OAI21X1 g1285__8757(.A0 (packet_reg[27]), .A1 (packet_reg[19]), .B0
       (n_10), .Y (n_23));
  OR3X4 g1286__1786(.A (state[0]), .B (state[1]), .C (n_8), .Y (n_22));
  CLKXOR2X1 g1290__5953(.A (packet_reg[4]), .B (packet_reg[12]), .Y
       (n_19));
  CLKXOR2X1 g1293__5703(.A (packet_reg[3]), .B (packet_reg[11]), .Y
       (n_18));
  CLKXOR2X1 g1295__7114(.A (packet_reg[1]), .B (packet_reg[9]), .Y
       (n_17));
  AOI21X1 g1297__5266(.A0 (packet_reg[26]), .A1 (packet_reg[18]), .B0
       (n_11), .Y (n_16));
  NAND2XL g1298__2250(.A (packet_reg[28]), .B (packet_reg[20]), .Y
       (n_15));
  NAND2XL g1299__6083(.A (packet_reg[29]), .B (packet_reg[21]), .Y
       (n_14));
  NOR2XL g1300__2703(.A (packet_reg[25]), .B (packet_reg[17]), .Y
       (n_13));
  NOR2XL g1301__5795(.A (packet_reg[26]), .B (packet_reg[18]), .Y
       (n_11));
  NAND2XL g1302__7344(.A (packet_reg[27]), .B (packet_reg[19]), .Y
       (n_10));
  NAND2XL g1303__1840(.A (packet_reg[30]), .B (packet_reg[22]), .Y
       (n_9));
  NAND2XL g1304__5019(.A (state[0]), .B (n_7), .Y (n_12));
  INVX1 g1306(.A (packet_valid), .Y (n_8));
  AND2XL g2__1857(.A (n_16), .B (n_0), .Y (n_6));
  CLKXOR2X1 g1316__9906(.A (packet_reg[7]), .B (packet_reg[15]), .Y
       (n_5));
  XNOR2X1 g1317__8780(.A (packet_reg[16]), .B (packet_reg[24]), .Y
       (n_4));
  XNOR2XL g1318__4296(.A (packet_reg[23]), .B (packet_reg[31]), .Y
       (n_3));
  CLKXOR2X1 g1319__3772(.A (packet_reg[6]), .B (packet_reg[14]), .Y
       (n_2));
  CLKXOR2X1 g1320__1474(.A (packet_reg[5]), .B (packet_reg[13]), .Y
       (n_1));
  CLKXOR2X1 g1321__4547(.A (packet_reg[2]), .B (packet_reg[10]), .Y
       (n_0));
  DFFRX1 \state_reg[1] (.RN (rst_n), .CK (clk), .D (n_20), .Q
       (state[1]), .QN (n_7));
endmodule

module audio_packet_processor(clk, rst_n, packet_in, packet_valid,
     packet_accepted, packet_rejected, audio_data, device_id,
     sequence_num, bus_key, bus_grant, bus_busy);
  input clk, rst_n, packet_valid;
  input [31:0] packet_in;
  output packet_accepted, packet_rejected, bus_grant, bus_busy;
  output [15:0] audio_data;
  output [7:0] device_id, sequence_num, bus_key;
  wire clk, rst_n, packet_valid;
  wire [31:0] packet_in;
  wire packet_accepted, packet_rejected, bus_grant, bus_busy;
  wire [15:0] audio_data;
  wire [7:0] device_id, sequence_num, bus_key;
  wire [7:0] device_id_latched;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       UNCONNECTED3, UNCONNECTED4, UNCONNECTED5, UNCONNECTED6;
  wire UNCONNECTED7, UNCONNECTED8, UNCONNECTED9, UNCONNECTED10,
       UNCONNECTED11, UNCONNECTED_HIER_Z, n_0, n_1;
  wire n_2, parse_done, ready_for_bus;
  assign bus_busy = bus_grant;
  assign bus_key[0] = bus_key[6];
  assign bus_key[1] = bus_key[7];
  assign bus_key[2] = bus_key[4];
  assign bus_key[3] = bus_key[5];
  assign audio_data[8] = 1'b0;
  assign audio_data[9] = 1'b0;
  assign audio_data[10] = 1'b0;
  assign audio_data[11] = 1'b0;
  assign audio_data[12] = 1'b0;
  assign audio_data[13] = 1'b0;
  assign audio_data[14] = 1'b0;
  assign audio_data[15] = 1'b0;
  bus_controller controller(.clk (clk), .rst_n (rst_n), .request_bus
       (UNCONNECTED_HIER_Z), .device_id (device_id_latched),
       .packet_valid (ready_for_bus), .bus_key ({bus_key[7:4],
       UNCONNECTED2, UNCONNECTED1, UNCONNECTED0, UNCONNECTED}),
       .bus_grant (bus_grant), .bus_busy (UNCONNECTED3));
  audio_packet_parser parser(.clk (clk), .rst_n (rst_n), .packet_in
       (packet_in), .packet_valid (packet_valid), .packet_accepted
       (packet_accepted), .packet_rejected (packet_rejected),
       .audio_data ({UNCONNECTED11, UNCONNECTED10, UNCONNECTED9,
       UNCONNECTED8, UNCONNECTED7, UNCONNECTED6, UNCONNECTED5,
       UNCONNECTED4, audio_data[7:0]}), .device_id (device_id),
       .sequence_num (sequence_num), .parse_done (parse_done));
  SDFFRHQX1 \device_id_latched_reg[2] (.RN (rst_n), .CK (clk), .D
       (device_id[2]), .SI (device_id_latched[2]), .SE (n_1), .Q
       (device_id_latched[2]));
  SDFFRHQX1 \device_id_latched_reg[1] (.RN (rst_n), .CK (clk), .D
       (device_id[1]), .SI (device_id_latched[1]), .SE (n_1), .Q
       (device_id_latched[1]));
  SDFFRHQX1 \device_id_latched_reg[3] (.RN (rst_n), .CK (clk), .D
       (device_id[3]), .SI (device_id_latched[3]), .SE (n_1), .Q
       (device_id_latched[3]));
  SDFFRHQX1 \device_id_latched_reg[6] (.RN (rst_n), .CK (clk), .D
       (device_id[6]), .SI (device_id_latched[6]), .SE (n_1), .Q
       (device_id_latched[6]));
  SDFFRHQX1 \device_id_latched_reg[0] (.RN (rst_n), .CK (clk), .D
       (device_id[0]), .SI (device_id_latched[0]), .SE (n_1), .Q
       (device_id_latched[0]));
  SDFFRHQX1 \device_id_latched_reg[4] (.RN (rst_n), .CK (clk), .D
       (device_id[4]), .SI (device_id_latched[4]), .SE (n_1), .Q
       (device_id_latched[4]));
  SDFFRHQX1 \device_id_latched_reg[5] (.RN (rst_n), .CK (clk), .D
       (device_id[5]), .SI (device_id_latched[5]), .SE (n_1), .Q
       (device_id_latched[5]));
  SDFFRHQX1 \device_id_latched_reg[7] (.RN (rst_n), .CK (clk), .D
       (device_id[7]), .SI (device_id_latched[7]), .SE (n_1), .Q
       (device_id_latched[7]));
  OAI31X1 g124__9682(.A0 (parse_done), .A1 (bus_grant), .A2 (n_0), .B0
       (n_1), .Y (n_2));
  NAND2XL g125__2683(.A (parse_done), .B (packet_accepted), .Y (n_1));
  DFFRX1 ready_for_bus_reg(.RN (rst_n), .CK (clk), .D (n_2), .Q
       (ready_for_bus), .QN (n_0));
endmodule

